{"version":3,"sources":["index.tsx"],"names":["React","useCallback","useEffect","useImperativeHandle","useRef","useState","I18nManager","Image","StyleSheet","useWindowDimensions","View","Animated","useAnimatedStyle","useDerivedValue","useSharedValue","withTiming","withDecay","useAnimatedReaction","runOnJS","withSpring","cancelAnimation","Gesture","GestureDetector","useVector","clamp","withDecaySpring","withRubberBandClamp","rtl","isRTL","DOUBLE_TAP_SCALE","MAX_SCALE","SPACE_BETWEEN_IMAGES","snapPoint","value","velocity","points","point","deltas","map","p","Math","abs","minDelta","min","apply","filter","defaultRenderImage","item","setImageDimensions","e","height","h","width","w","nativeEvent","source","uri","absoluteFillObject","ResizableImage","memo","translateX","index","isFirst","isLast","currentIndex","renderItem","onSwipeToClose","onTap","onDoubleTap","onLongPress","onPanStart","onScaleStart","onScaleEnd","emptySpaceWidth","doubleTapScale","doubleTapInterval","maxScale","pinchEnabled","disableTransitionOnScaledImage","hideAdjacentImagesOnScaledImage","disableVerticalSwipe","disableSwipeUp","loop","length","onScaleChange","onScaleChangeRange","setRef","CENTER","x","y","offset","scale","translation","origin","adjustedFocal","originalLayout","layout","isActive","scaleReaction","start","end","setAdjustedFocal","focalX","focalY","resetValues","animated","getEdgeX","newWidth","clampY","newScale","newHeight","clampX","getEdgeY","onStart","getPosition","i","getIndexFromPosition","position","round","currentScale","translateIndex","diff","reset","animatedStyle","isNextForLast","isPrevForFirst","transform","translateY","portrait","imageHeight","imageWidth","itemProps","scaleOffset","pinchGesture","Pinch","enabled","onUpdate","s","numberOfPointers","nextScale","onEnd","sc","nextTransX","nextTransY","diffX","moved","diffY","isVertical","initialTranslateX","shouldClose","isMoving","panGesture","Pan","minDistance","maxPointers","onBegin","velocityY","velocityX","translationX","translationY","clampedX","transX","disabledTransition","moveX","edgeY","destY","edgeX","some","snapPoints","_","snapTo","nextIndex","damping","mass","stiffness","restDisplacementThreshold","restSpeedThreshold","edge","isEdge","moveTo","interruptedScroll","tapGesture","Tap","numberOfTaps","maxDistance","doubleTapGesture","maxDelay","longPressGesture","LongPress","Race","Simultaneous","Exclusive","GalleryComponent","data","initialIndex","numToRender","onIndexChange","style","keyExtractor","containerDimensions","eventsCallbacks","ref","windowDimensions","dimensions","isLoop","setIndex","refs","current","changeIndex","newIndex","forEach","itemRef","flex","backgroundColor","flexDirection","outOfLoopRenderRange","hidden","id","key","_id","marginLeft","zIndex","Gallery","forwardRef"],"mappings":"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","sourcesContent":["import React, {\n  useCallback,\n  useEffect,\n  useImperativeHandle,\n  useRef,\n  useState,\n} from 'react';\nimport {\n  I18nManager,\n  Image,\n  StyleSheet,\n  useWindowDimensions,\n  View,\n  ViewStyle,\n} from 'react-native';\nimport Animated, {\n  useAnimatedStyle,\n  useDerivedValue,\n  useSharedValue,\n  withTiming,\n  withDecay,\n  useAnimatedReaction,\n  runOnJS,\n  withSpring,\n  cancelAnimation,\n} from 'react-native-reanimated';\nimport { Gesture, GestureDetector } from 'react-native-gesture-handler';\nimport { useVector } from 'react-native-redash';\nimport { clamp, withDecaySpring, withRubberBandClamp } from './utils';\n\nconst rtl = I18nManager.isRTL;\n\nconst DOUBLE_TAP_SCALE = 3;\nconst MAX_SCALE = 6;\nconst SPACE_BETWEEN_IMAGES = 40;\n\ntype Dimensions = {\n  height: number;\n  width: number;\n};\n\nexport const snapPoint = (\n  value: number,\n  velocity: number,\n  points: ReadonlyArray<number>\n): number => {\n  'worklet';\n  const point = value + 0.25 * velocity;\n  const deltas = points.map((p) => Math.abs(point - p));\n  const minDelta = Math.min.apply(null, deltas);\n  return points.filter((p) => Math.abs(point - p) === minDelta)[0];\n};\n\nexport type RenderItemInfo<T> = {\n  index: number;\n  item: T;\n  setImageDimensions: (imageDimensions: Dimensions) => void;\n};\n\nconst defaultRenderImage = ({\n  item,\n  setImageDimensions,\n}: RenderItemInfo<any>) => {\n  return (\n    <Image\n      onLoad={(e) => {\n        const { height: h, width: w } = e.nativeEvent.source;\n        setImageDimensions({ height: h, width: w });\n      }}\n      source={{ uri: item }}\n      resizeMode=\"contain\"\n      style={StyleSheet.absoluteFillObject}\n    />\n  );\n};\n\ntype EventsCallbacks = {\n  onSwipeToClose?: () => void;\n  onTap?: () => void;\n  onDoubleTap?: () => void;\n  onLongPress?: () => void;\n  onScaleStart?: () => void;\n  onScaleEnd?: (scale: number) => void;\n  onPanStart?: () => void;\n};\n\ntype RenderItem<T> = (\n  imageInfo: RenderItemInfo<T>\n) => React.ReactElement | null;\n\ntype Props<T> = EventsCallbacks & {\n  item: T;\n  index: number;\n  isFirst: boolean;\n  isLast: boolean;\n  translateX: Animated.SharedValue<number>;\n  currentIndex: Animated.SharedValue<number>;\n  renderItem: RenderItem<T>;\n  width: number;\n  height: number;\n  length: number;\n\n  emptySpaceWidth: number;\n  doubleTapInterval: number;\n  doubleTapScale: number;\n  maxScale: number;\n  pinchEnabled: boolean;\n  disableTransitionOnScaledImage: boolean;\n  hideAdjacentImagesOnScaledImage: boolean;\n  disableVerticalSwipe: boolean;\n  disableSwipeUp?: boolean;\n  loop: boolean;\n  onScaleChange?: (scale: number) => void;\n  onScaleChangeRange?: { start: number; end: number };\n\n  setRef: (index: number, value: ItemRef) => void;\n};\n\ntype ItemRef = { reset: (animated: boolean) => void };\n\nconst ResizableImage = React.memo(\n  <T extends any>({\n    item,\n    translateX,\n    index,\n    isFirst,\n    isLast,\n    currentIndex,\n    renderItem,\n    width,\n    height,\n    onSwipeToClose,\n    onTap,\n    onDoubleTap,\n    onLongPress,\n    onPanStart,\n    onScaleStart,\n    onScaleEnd,\n    emptySpaceWidth,\n    doubleTapScale,\n    doubleTapInterval,\n    maxScale,\n    pinchEnabled,\n    disableTransitionOnScaledImage,\n    hideAdjacentImagesOnScaledImage,\n    disableVerticalSwipe,\n    disableSwipeUp,\n    loop,\n    length,\n    onScaleChange,\n    onScaleChangeRange,\n    setRef,\n  }: Props<T>) => {\n    const CENTER = {\n      x: width / 2,\n      y: height / 2,\n    };\n\n    const offset = useVector(0, 0);\n\n    const scale = useSharedValue(1);\n\n    const translation = useVector(0, 0);\n\n    const origin = useVector(0, 0);\n\n    const adjustedFocal = useVector(0, 0);\n\n    const originalLayout = useVector(width, 0);\n    const layout = useVector(width, 0);\n\n    const isActive = useDerivedValue(() => currentIndex.value === index, [\n      currentIndex,\n    ]);\n\n    useAnimatedReaction(\n      () => {\n        return scale.value;\n      },\n      (scaleReaction) => {\n        if (!onScaleChange) {\n          return;\n        }\n\n        if (!onScaleChangeRange) {\n          runOnJS(onScaleChange)(scaleReaction);\n          return;\n        }\n\n        if (\n          scaleReaction > onScaleChangeRange.start &&\n          scaleReaction < onScaleChangeRange.end\n        ) {\n          runOnJS(onScaleChange)(scaleReaction);\n        }\n      }\n    );\n\n    const setAdjustedFocal = ({\n      focalX,\n      focalY,\n    }: Record<'focalX' | 'focalY', number>) => {\n      'worklet';\n\n      adjustedFocal.x.value = focalX - (CENTER.x + offset.x.value);\n      adjustedFocal.y.value = focalY - (CENTER.y + offset.y.value);\n    };\n\n    const resetValues = (animated = true) => {\n      'worklet';\n\n      scale.value = animated ? withTiming(1) : 1;\n      offset.x.value = animated ? withTiming(0) : 0;\n      offset.y.value = animated ? withTiming(0) : 0;\n      translation.x.value = animated ? withTiming(0) : 0;\n      translation.y.value = animated ? withTiming(0) : 0;\n    };\n\n    const getEdgeX = () => {\n      'worklet';\n      const newWidth = scale.value * layout.x.value;\n\n      const point = (newWidth - width) / 2;\n\n      if (point < 0) {\n        return [-0, 0];\n      }\n\n      return [-point, point];\n    };\n\n    const clampY = (value: number, newScale: number) => {\n      'worklet';\n      const newHeight = newScale * layout.y.value;\n      const point = (newHeight - height) / 2;\n\n      if (newHeight < height) {\n        return 0;\n      }\n      return clamp(value, -point, point);\n    };\n\n    const clampX = (value: number, newScale: number) => {\n      'worklet';\n      const newWidth = newScale * layout.x.value;\n      const point = (newWidth - width) / 2;\n\n      if (newWidth < width) {\n        return 0;\n      }\n      return clamp(value, -point, point);\n    };\n\n    const getEdgeY = () => {\n      'worklet';\n\n      const newHeight = scale.value * layout.y.value;\n\n      const point = (newHeight - height) / 2;\n\n      return [-point, point];\n    };\n\n    const onStart = () => {\n      'worklet';\n\n      cancelAnimation(translateX);\n\n      offset.x.value = offset.x.value + translation.x.value;\n      offset.y.value = offset.y.value + translation.y.value;\n\n      translation.x.value = 0;\n      translation.y.value = 0;\n    };\n\n    const getPosition = (i?: number) => {\n      'worklet';\n\n      return (\n        -(width + emptySpaceWidth) * (typeof i !== 'undefined' ? i : index)\n      );\n    };\n\n    const getIndexFromPosition = (position: number) => {\n      'worklet';\n\n      return Math.round(position / -(width + emptySpaceWidth));\n    };\n\n    useAnimatedReaction(\n      () => {\n        return {\n          i: currentIndex.value,\n          translateX: translateX.value,\n          currentScale: scale.value,\n        };\n      },\n      ({ i, translateX, currentScale }) => {\n        const translateIndex = translateX / -(width + emptySpaceWidth);\n        if (loop) {\n          let diff = Math.abs((translateIndex % 1) - 0.5);\n          if (diff > 0.5) {\n            diff = 1 - diff;\n          }\n          if (diff > 0.48 && Math.abs(i) !== index) {\n            resetValues(false);\n            return;\n          }\n        }\n        if (Math.abs(i - index) === 2 && currentScale > 1) {\n          resetValues(false);\n        }\n      }\n    );\n\n    useEffect(() => {\n      setRef(index, {\n        reset: (animated: boolean) => resetValues(animated),\n      });\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [index]);\n\n    const animatedStyle = useAnimatedStyle(() => {\n      const isNextForLast =\n        loop &&\n        isFirst &&\n        currentIndex.value === length - 1 &&\n        translateX.value < getPosition(length - 1);\n      const isPrevForFirst =\n        loop &&\n        isLast &&\n        currentIndex.value === 0 &&\n        translateX.value > getPosition(0);\n      return {\n        transform: [\n          {\n            translateX:\n              offset.x.value +\n              translation.x.value -\n              (isNextForLast ? getPosition(length) : 0) +\n              (isPrevForFirst ? getPosition(length) : 0),\n          },\n          { translateY: offset.y.value + translation.y.value },\n          { scale: scale.value },\n        ],\n      };\n    });\n\n    const setImageDimensions: RenderItemInfo<T>['setImageDimensions'] = ({\n      width: w,\n      height: h,\n    }) => {\n      originalLayout.x.value = w;\n      originalLayout.y.value = h;\n\n      const portrait = width > height;\n\n      if (portrait) {\n        const imageHeight = Math.min((h * width) / w, height);\n        const imageWidth = Math.min(w, width);\n        layout.y.value = imageHeight;\n        if (imageHeight === height) {\n          layout.x.value = (w * height) / h;\n        } else {\n          layout.x.value = imageWidth;\n        }\n      } else {\n        const imageWidth = Math.min((w * height) / h, width);\n        const imageHeight = Math.min(h, height);\n        layout.x.value = imageWidth;\n        if (imageWidth === width) {\n          layout.y.value = (h * width) / w;\n        } else {\n          layout.y.value = imageHeight;\n        }\n      }\n    };\n\n    useEffect(() => {\n      setImageDimensions({\n        width: originalLayout.x.value,\n        height: originalLayout.y.value,\n      });\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [width, height]);\n\n    const itemProps: RenderItemInfo<T> = {\n      item,\n      index,\n      setImageDimensions,\n    };\n\n    const scaleOffset = useSharedValue(1);\n\n    const pinchGesture = Gesture.Pinch()\n      .enabled(pinchEnabled)\n      .onStart(({ focalX, focalY }) => {\n        'worklet';\n        if (!isActive.value) return;\n        if (onScaleStart) {\n          runOnJS(onScaleStart)();\n        }\n\n        onStart();\n\n        scaleOffset.value = scale.value;\n\n        setAdjustedFocal({ focalX, focalY });\n\n        origin.x.value = adjustedFocal.x.value;\n        origin.y.value = adjustedFocal.y.value;\n      })\n      .onUpdate(({ scale: s, focalX, focalY, numberOfPointers }) => {\n        'worklet';\n        if (!isActive.value) return;\n        if (numberOfPointers !== 2) return;\n\n        const nextScale = withRubberBandClamp(\n          s * scaleOffset.value,\n          0.55,\n          maxScale,\n          [1, maxScale]\n        );\n\n        scale.value = nextScale;\n\n        setAdjustedFocal({ focalX, focalY });\n\n        translation.x.value =\n          adjustedFocal.x.value +\n          ((-1 * nextScale) / scaleOffset.value) * origin.x.value;\n        translation.y.value =\n          adjustedFocal.y.value +\n          ((-1 * nextScale) / scaleOffset.value) * origin.y.value;\n      })\n      .onEnd(() => {\n        'worklet';\n        if (!isActive.value) return;\n        if (onScaleEnd) {\n          runOnJS(onScaleEnd)(scale.value);\n        }\n        if (scale.value < 1) {\n          resetValues();\n        } else {\n          const sc = Math.min(scale.value, maxScale);\n\n          const newWidth = sc * layout.x.value;\n          const newHeight = sc * layout.y.value;\n\n          const nextTransX =\n            scale.value > maxScale\n              ? adjustedFocal.x.value +\n                ((-1 * maxScale) / scaleOffset.value) * origin.x.value\n              : translation.x.value;\n\n          const nextTransY =\n            scale.value > maxScale\n              ? adjustedFocal.y.value +\n                ((-1 * maxScale) / scaleOffset.value) * origin.y.value\n              : translation.y.value;\n\n          const diffX = nextTransX + offset.x.value - (newWidth - width) / 2;\n\n          if (scale.value > maxScale) {\n            scale.value = withTiming(maxScale);\n          }\n\n          if (newWidth <= width) {\n            translation.x.value = withTiming(0);\n          } else {\n            let moved;\n            if (diffX > 0) {\n              translation.x.value = withTiming(nextTransX - diffX);\n              moved = true;\n            }\n\n            if (newWidth + diffX < width) {\n              translation.x.value = withTiming(\n                nextTransX + width - (newWidth + diffX)\n              );\n              moved = true;\n            }\n            if (!moved) {\n              translation.x.value = withTiming(nextTransX);\n            }\n          }\n\n          const diffY = nextTransY + offset.y.value - (newHeight - height) / 2;\n\n          if (newHeight <= height) {\n            translation.y.value = withTiming(-offset.y.value);\n          } else {\n            let moved;\n            if (diffY > 0) {\n              translation.y.value = withTiming(nextTransY - diffY);\n              moved = true;\n            }\n\n            if (newHeight + diffY < height) {\n              translation.y.value = withTiming(\n                nextTransY + height - (newHeight + diffY)\n              );\n              moved = true;\n            }\n            if (!moved) {\n              translation.y.value = withTiming(nextTransY);\n            }\n          }\n        }\n      });\n\n    const isVertical = useSharedValue(false);\n    const initialTranslateX = useSharedValue(0);\n    const shouldClose = useSharedValue(false);\n    const isMoving = useVector(0);\n\n    const panGesture = Gesture.Pan()\n      .minDistance(10)\n      .maxPointers(1)\n      .onBegin(() => {\n        'worklet';\n        if (!isActive.value) return;\n        const newWidth = scale.value * layout.x.value;\n        const newHeight = scale.value * layout.y.value;\n        if (\n          offset.x.value < (newWidth - width) / 2 - translation.x.value &&\n          offset.x.value > -(newWidth - width) / 2 - translation.x.value\n        ) {\n          cancelAnimation(offset.x);\n        }\n\n        if (\n          offset.y.value < (newHeight - height) / 2 - translation.y.value &&\n          offset.y.value > -(newHeight - height) / 2 - translation.y.value\n        ) {\n          cancelAnimation(offset.y);\n        }\n      })\n      .onStart(({ velocityY, velocityX }) => {\n        'worklet';\n        if (!isActive.value) return;\n\n        if (onPanStart) {\n          runOnJS(onPanStart)();\n        }\n\n        onStart();\n        isVertical.value = Math.abs(velocityY) > Math.abs(velocityX);\n        initialTranslateX.value = translateX.value;\n      })\n      .onUpdate(({ translationX, translationY, velocityY }) => {\n        'worklet';\n        if (!isActive.value) return;\n        if (disableVerticalSwipe && scale.value === 1 && isVertical.value)\n          return;\n\n        const x = getEdgeX();\n\n        if (!isVertical.value || scale.value > 1) {\n          const clampedX = clamp(\n            translationX,\n            x[0] - offset.x.value,\n            x[1] - offset.x.value\n          );\n\n          const transX = rtl\n            ? initialTranslateX.value - translationX + clampedX\n            : initialTranslateX.value + translationX - clampedX;\n\n          if (\n            hideAdjacentImagesOnScaledImage &&\n            disableTransitionOnScaledImage\n          ) {\n            const disabledTransition =\n              disableTransitionOnScaledImage && scale.value > 1;\n\n            const moveX = withRubberBandClamp(\n              transX,\n              0.55,\n              width,\n              disabledTransition\n                ? [getPosition(index), getPosition(index + 1)]\n                : [getPosition(length - 1), 0]\n            );\n\n            if (!disabledTransition) {\n              translateX.value = moveX;\n            }\n            if (disabledTransition) {\n              translation.x.value = rtl\n                ? clampedX - moveX + translateX.value\n                : clampedX + moveX - translateX.value;\n            } else {\n              translation.x.value = clampedX;\n            }\n          } else {\n            if (loop) {\n              translateX.value = transX;\n            } else {\n              translateX.value = withRubberBandClamp(\n                transX,\n                0.55,\n                width,\n                disableTransitionOnScaledImage && scale.value > 1\n                  ? [getPosition(index), getPosition(index + 1)]\n                  : [getPosition(length - 1), 0]\n              );\n            }\n            translation.x.value = clampedX;\n          }\n        }\n\n        const newHeight = scale.value * layout.y.value;\n\n        const edgeY = getEdgeY();\n\n        if (newHeight > height) {\n          translation.y.value = withRubberBandClamp(\n            translationY,\n            0.55,\n            newHeight,\n            [edgeY[0] - offset.y.value, edgeY[1] - offset.y.value]\n          );\n        } else if (\n          !(scale.value === 1 && translateX.value !== getPosition()) &&\n          (!disableSwipeUp || translationY >= 0)\n        ) {\n          translation.y.value = translationY;\n        }\n\n        if (isVertical.value && newHeight <= height) {\n          const destY = translationY + velocityY * 0.2;\n          shouldClose.value = disableSwipeUp\n            ? destY > 220\n            : Math.abs(destY) > 220;\n        }\n      })\n      .onEnd(({ velocityX, velocityY }) => {\n        'worklet';\n        if (!isActive.value) return;\n\n        const newHeight = scale.value * layout.y.value;\n\n        const edgeX = getEdgeX();\n\n        if (\n          Math.abs(translateX.value - getPosition()) >= 0 &&\n          edgeX.some((x) => x === translation.x.value + offset.x.value)\n        ) {\n          let snapPoints = [index - 1, index, index + 1]\n            .filter((_, y) => {\n              if (loop) return true;\n\n              if (y === 0) {\n                return !isFirst;\n              }\n              if (y === 2) {\n                return !isLast;\n              }\n              return true;\n            })\n            .map((i) => getPosition(i));\n\n          if (disableTransitionOnScaledImage && scale.value > 1) {\n            snapPoints = [getPosition(index)];\n          }\n\n          let snapTo = snapPoint(\n            translateX.value,\n            rtl ? -velocityX : velocityX,\n            snapPoints\n          );\n\n          const nextIndex = getIndexFromPosition(snapTo);\n\n          if (currentIndex.value !== nextIndex) {\n            if (loop) {\n              if (nextIndex === length) {\n                currentIndex.value = 0;\n                translateX.value = translateX.value - getPosition(length);\n                snapTo = 0;\n              } else if (nextIndex === -1) {\n                currentIndex.value = length - 1;\n                translateX.value = translateX.value + getPosition(length);\n                snapTo = getPosition(length - 1);\n              } else {\n                currentIndex.value = nextIndex;\n              }\n            } else {\n              currentIndex.value = nextIndex;\n            }\n          }\n\n          translateX.value = withSpring(snapTo, {\n            damping: 800,\n            mass: 1,\n            stiffness: 250,\n            restDisplacementThreshold: 0.02,\n            restSpeedThreshold: 4,\n          });\n        } else {\n          const newWidth = scale.value * layout.x.value;\n\n          isMoving.x.value = 1;\n          offset.x.value = withDecaySpring(\n            {\n              velocity: velocityX,\n              clamp: [\n                -(newWidth - width) / 2 - translation.x.value,\n                (newWidth - width) / 2 - translation.x.value,\n              ],\n            },\n            (edge) => {\n              'worklet';\n              isMoving.x.value = 0;\n              if (edge.isEdge) {\n                isMoving.y.value = 0;\n              }\n            }\n          );\n        }\n\n        if (onSwipeToClose && shouldClose.value) {\n          offset.y.value = withDecay({\n            velocity: velocityY,\n          });\n          runOnJS(onSwipeToClose)();\n          return;\n        }\n\n        if (newHeight > height) {\n          isMoving.y.value = 1;\n          offset.y.value = withDecaySpring(\n            {\n              velocity: velocityY,\n              clamp: [\n                -(newHeight - height) / 2 - translation.y.value,\n                (newHeight - height) / 2 - translation.y.value,\n              ],\n            },\n            (edge) => {\n              'worklet';\n              isMoving.y.value = 0;\n              if (edge.isEdge) {\n                isMoving.x.value = 0;\n              }\n            }\n          );\n        } else {\n          const diffY =\n            translation.y.value + offset.y.value - (newHeight - height) / 2;\n\n          if (newHeight <= height && diffY !== height - diffY - newHeight) {\n            const moveTo = diffY - (height - newHeight) / 2;\n\n            translation.y.value = withTiming(translation.y.value - moveTo);\n          }\n        }\n      });\n\n    const interruptedScroll = useSharedValue(false);\n\n    const tapGesture = Gesture.Tap()\n      .enabled(!!onTap)\n      .numberOfTaps(1)\n      .maxDistance(10)\n      .onBegin(() => {\n        'worklet';\n        if (isMoving.x.value || isMoving.y.value) {\n          interruptedScroll.value = true;\n        }\n      })\n      .onEnd(() => {\n        'worklet';\n        if (!isActive.value) return;\n        if (onTap && !interruptedScroll.value) {\n          runOnJS(onTap)();\n        }\n        interruptedScroll.value = false;\n      });\n\n    const doubleTapGesture = Gesture.Tap()\n      .numberOfTaps(2)\n      .maxDelay(doubleTapInterval)\n      .onEnd(({ x, y, numberOfPointers }) => {\n        'worklet';\n        if (!isActive.value) return;\n        if (numberOfPointers !== 1) return;\n        if (onTap && interruptedScroll.value) {\n          interruptedScroll.value = false;\n          if (onTap) {\n            runOnJS(onTap)();\n          }\n          return;\n        }\n        if (onDoubleTap) {\n          runOnJS(onDoubleTap)();\n        }\n\n        if (scale.value === 1) {\n          scale.value = withTiming(doubleTapScale);\n\n          setAdjustedFocal({ focalX: x, focalY: y });\n\n          offset.x.value = withTiming(\n            clampX(\n              adjustedFocal.x.value +\n                -1 * doubleTapScale * adjustedFocal.x.value,\n              doubleTapScale\n            )\n          );\n          offset.y.value = withTiming(\n            clampY(\n              adjustedFocal.y.value +\n                -1 * doubleTapScale * adjustedFocal.y.value,\n              doubleTapScale\n            )\n          );\n        } else {\n          resetValues();\n        }\n      });\n\n    const longPressGesture = Gesture.LongPress()\n      .enabled(!!onLongPress)\n      .maxDistance(10)\n      .onStart(() => {\n        'worklet';\n        if (interruptedScroll.value) {\n          interruptedScroll.value = false;\n          return;\n        }\n        if (onLongPress) {\n          runOnJS(onLongPress)();\n        }\n      });\n\n    return (\n      <GestureDetector\n        gesture={Gesture.Race(\n          Gesture.Simultaneous(\n            longPressGesture,\n            Gesture.Race(panGesture, pinchGesture)\n          ),\n          Gesture.Exclusive(doubleTapGesture, tapGesture)\n        )}\n      >\n        <View style={{ width, height }}>\n          <Animated.View style={[{ width, height }, animatedStyle]}>\n            {renderItem(itemProps)}\n          </Animated.View>\n        </View>\n      </GestureDetector>\n    );\n  }\n);\n\nexport type GalleryRef = {\n  setIndex: (newIndex: number) => void;\n  reset: (animated?: boolean) => void;\n};\n\nexport type GalleryReactRef = React.Ref<GalleryRef>;\n\ntype GalleryProps<T> = EventsCallbacks & {\n  ref?: GalleryReactRef;\n  data: T[];\n\n  renderItem?: RenderItem<T>;\n  keyExtractor?: (item: T, index: number) => string | number;\n  initialIndex?: number;\n  onIndexChange?: (index: number) => void;\n  numToRender?: number;\n  emptySpaceWidth?: number;\n  doubleTapScale?: number;\n  doubleTapInterval?: number;\n  maxScale?: number;\n  style?: ViewStyle;\n  containerDimensions?: { width: number; height: number };\n  pinchEnabled?: boolean;\n  disableTransitionOnScaledImage?: boolean;\n  hideAdjacentImagesOnScaledImage?: boolean;\n  disableVerticalSwipe?: boolean;\n  disableSwipeUp?: boolean;\n  loop?: boolean;\n  onScaleChange?: (scale: number) => void;\n  onScaleChangeRange?: { start: number; end: number };\n};\n\nconst GalleryComponent = <T extends any>(\n  {\n    data,\n    renderItem = defaultRenderImage,\n    initialIndex = 0,\n    numToRender = 5,\n    emptySpaceWidth = SPACE_BETWEEN_IMAGES,\n    doubleTapScale = DOUBLE_TAP_SCALE,\n    doubleTapInterval = 500,\n    maxScale = MAX_SCALE,\n    pinchEnabled = true,\n    disableTransitionOnScaledImage = false,\n    hideAdjacentImagesOnScaledImage = false,\n    onIndexChange,\n    style,\n    keyExtractor,\n    containerDimensions,\n    disableVerticalSwipe,\n    disableSwipeUp = false,\n    loop = false,\n    onScaleChange,\n    onScaleChangeRange,\n    ...eventsCallbacks\n  }: GalleryProps<T>,\n  ref: GalleryReactRef\n) => {\n  const windowDimensions = useWindowDimensions();\n  const dimensions = containerDimensions || windowDimensions;\n\n  const isLoop = loop && data?.length > 1;\n\n  const [index, setIndex] = useState(initialIndex);\n\n  const refs = useRef<ItemRef[]>([]);\n\n  const setRef = useCallback((index: number, value: ItemRef) => {\n    refs.current[index] = value;\n  }, []);\n\n  const translateX = useSharedValue(\n    initialIndex * -(dimensions.width + emptySpaceWidth)\n  );\n\n  const currentIndex = useSharedValue(initialIndex);\n\n  const animatedStyle = useAnimatedStyle(() => ({\n    transform: [{ translateX: rtl ? -translateX.value : translateX.value }],\n  }));\n\n  const changeIndex = useCallback(\n    (newIndex) => {\n      onIndexChange?.(newIndex);\n      setIndex(newIndex);\n    },\n    [onIndexChange, setIndex]\n  );\n\n  useAnimatedReaction(\n    () => currentIndex.value,\n    (newIndex) => runOnJS(changeIndex)(newIndex),\n    [currentIndex, changeIndex]\n  );\n\n  useEffect(() => {\n    translateX.value = index * -(dimensions.width + emptySpaceWidth);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [windowDimensions]);\n\n  useImperativeHandle(ref, () => ({\n    setIndex(newIndex: number) {\n      refs.current?.[index].reset(false);\n      setIndex(newIndex);\n      currentIndex.value = newIndex;\n      translateX.value = newIndex * -(dimensions.width + emptySpaceWidth);\n    },\n    reset(animated = false) {\n      refs.current?.forEach((itemRef) => itemRef.reset(animated));\n    },\n  }));\n\n  useEffect(() => {\n    if (index >= data.length) {\n      const newIndex = data.length - 1;\n      setIndex(newIndex);\n      currentIndex.value = newIndex;\n      translateX.value = newIndex * -(dimensions.width + emptySpaceWidth);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [data?.length]);\n\n  return (\n    <View style={[{ flex: 1, backgroundColor: 'black' }, style]}>\n      <Animated.View style={[{ flex: 1, flexDirection: 'row' }, animatedStyle]}>\n        {data.map((item: any, i) => {\n          const isFirst = i === 0;\n\n          const outOfLoopRenderRange =\n            !isLoop ||\n            (Math.abs(i - index) < data.length - (numToRender - 1) / 2 &&\n              Math.abs(i - index) > (numToRender - 1) / 2);\n\n          const hidden =\n            Math.abs(i - index) > (numToRender - 1) / 2 && outOfLoopRenderRange;\n\n          return (\n            <View\n              key={\n                keyExtractor\n                  ? keyExtractor(item, i)\n                  : item.id || item.key || item._id || item\n              }\n              style={[\n                dimensions,\n                isFirst ? {} : { marginLeft: emptySpaceWidth },\n                { zIndex: index === i ? 1 : 0 },\n              ]}\n            >\n              {hidden ? null : (\n                // @ts-ignore\n                <ResizableImage\n                  {...{\n                    translateX,\n                    item,\n                    currentIndex,\n                    index: i,\n                    isFirst,\n                    isLast: i === data.length - 1,\n                    length: data.length,\n                    renderItem,\n                    emptySpaceWidth,\n                    doubleTapScale,\n                    doubleTapInterval,\n                    maxScale,\n                    pinchEnabled,\n                    disableTransitionOnScaledImage,\n                    hideAdjacentImagesOnScaledImage,\n                    disableVerticalSwipe,\n                    disableSwipeUp,\n                    loop: isLoop,\n                    onScaleChange,\n                    onScaleChangeRange,\n                    setRef,\n                    ...eventsCallbacks,\n                    ...dimensions,\n                  }}\n                />\n              )}\n            </View>\n          );\n        })}\n      </Animated.View>\n    </View>\n  );\n};\n\nconst Gallery = React.forwardRef(GalleryComponent) as <T extends any>(\n  p: GalleryProps<T> & { ref?: GalleryReactRef }\n) => React.ReactElement;\n\nexport default Gallery;\n"]}