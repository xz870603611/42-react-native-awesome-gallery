{"version":3,"sources":["withDecaySpring.ts"],"names":["MIN_VELOCITY","withDecaySpring","userConfig","callback","config","deceleration","damping","mass","stiffness","overshootClamping","restDisplacementThreshold","restSpeedThreshold","clamp","velocity","VELOCITY_EPS","decaySpring","animation","now","lastTimestamp","current","deltaTime","Math","min","kv","pow","kx","v0","v","nextX","x","Array","isArray","moveBack","toValue","c","m","k","springV0","x0","zeta","sqrt","omega0","omega1","t","sin1","sin","cos1","cos","underDampedEnvelope","exp","underDampedFrag1","underDampedPosition","underDampedVelocity","criticallyDampedEnvelope","criticallyDampedPosition","criticallyDampedVelocity","isOvershooting","isVelocity","abs","isDisplacement","startTime","progress","isEdge","onStart","value","onFrame"],"mappings":"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","sourcesContent":["import { defineAnimation } from 'react-native-reanimated';\nimport type {\n  WithDecayConfig,\n  WithSpringConfig,\n} from 'react-native-reanimated';\n\nconst MIN_VELOCITY = 80;\n\nexport function withDecaySpring(\n  userConfig: WithDecayConfig & WithSpringConfig & { clamp: [number, number] },\n  callback?: (edge: { isEdge: boolean }) => void\n) {\n  'worklet';\n\n  return defineAnimation(0, () => {\n    'worklet';\n    const config = {\n      deceleration: 0.997,\n      // SPRING CONFIG\n      damping: 800,\n      mass: 1,\n      stiffness: 150,\n\n      overshootClamping: false,\n      restDisplacementThreshold: 0.02,\n      restSpeedThreshold: 4,\n      clamp: userConfig.clamp,\n      velocity: userConfig.velocity,\n    };\n\n    const VELOCITY_EPS = 1;\n\n    function decaySpring(animation: any, now: number) {\n      const { lastTimestamp, current, velocity } = animation;\n\n      const deltaTime = Math.min(now - lastTimestamp, 64);\n      animation.lastTimestamp = now;\n\n      const kv = Math.pow(config.deceleration, deltaTime);\n      const kx = (config.deceleration * (1 - kv)) / (1 - config.deceleration);\n\n      const v0 = velocity / 1000;\n      let v = v0 * kv * 1000;\n      const nextX = current + v0 * kx;\n\n      let x = nextX;\n\n      if (Array.isArray(config.clamp)) {\n        if (animation.moveBack) {\n          const toValue = animation.toValue;\n\n          const c = config.damping;\n          const m = config.mass;\n          const k = config.stiffness;\n\n          const springV0 = -velocity;\n          const x0 = toValue - current;\n\n          const zeta = c / (2 * Math.sqrt(k * m)); // damping ratio\n          const omega0 = Math.sqrt(k / m); // undamped angular frequency of the oscillator (rad/ms)\n          const omega1 = omega0 * Math.sqrt(1 - zeta ** 2); // exponential decay\n\n          const t = deltaTime / 1000;\n\n          const sin1 = Math.sin(omega1 * t);\n          const cos1 = Math.cos(omega1 * t);\n\n          // under damped\n          const underDampedEnvelope = Math.exp(-zeta * omega0 * t);\n          const underDampedFrag1 =\n            underDampedEnvelope *\n            (sin1 * ((springV0 + zeta * omega0 * x0) / omega1) + x0 * cos1);\n\n          const underDampedPosition = toValue - underDampedFrag1;\n          // This looks crazy -- it's actually just the derivative of the oscillation function\n          const underDampedVelocity =\n            zeta * omega0 * underDampedFrag1 -\n            underDampedEnvelope *\n              (cos1 * (springV0 + zeta * omega0 * x0) - omega1 * x0 * sin1);\n\n          // critically damped\n          const criticallyDampedEnvelope = Math.exp(-omega0 * t);\n          const criticallyDampedPosition =\n            toValue -\n            criticallyDampedEnvelope * (x0 + (springV0 + omega0 * x0) * t);\n\n          const criticallyDampedVelocity =\n            criticallyDampedEnvelope *\n            (springV0 * (t * omega0 - 1) + t * x0 * omega0 * omega0);\n\n          const isOvershooting = () => {\n            if (config.overshootClamping && config.stiffness !== 0) {\n              return current < toValue\n                ? animation.current > toValue\n                : animation.current < toValue;\n            } else {\n              return false;\n            }\n          };\n\n          const isVelocity = Math.abs(velocity) < config.restSpeedThreshold;\n          const isDisplacement =\n            config.stiffness === 0 ||\n            Math.abs(toValue - current) < config.restDisplacementThreshold;\n\n          if (zeta < 1) {\n            x = underDampedPosition;\n            v = underDampedVelocity;\n          } else {\n            x = criticallyDampedPosition;\n            v = criticallyDampedVelocity;\n          }\n\n          if (isOvershooting() || (isVelocity && isDisplacement)) {\n            return true;\n          }\n        }\n\n        if (nextX < config.clamp[0] || nextX > config.clamp[1]) {\n          if (!animation.startTime) {\n            animation.startTime = now;\n            animation.progress = 0;\n            animation.moveBack = true;\n\n            animation.toValue =\n              nextX <= config.clamp[0] ? config.clamp[0] : config.clamp[1];\n\n            callback?.({ isEdge: true });\n          }\n        }\n      }\n\n      animation.current = x;\n      animation.velocity = v;\n\n      return (\n        Math.abs(v) < VELOCITY_EPS &&\n        !(nextX < config.clamp[0] || nextX > config.clamp[1])\n      );\n    }\n\n    function onStart(animation: any, value: number, now: number) {\n      animation.current = value;\n      animation.lastTimestamp = now;\n    }\n\n    return {\n      onFrame: decaySpring,\n      onStart,\n      velocity:\n        Math.abs(config.velocity || 0) > MIN_VELOCITY ? config.velocity : 0,\n      callback,\n    };\n  });\n}\n"]}